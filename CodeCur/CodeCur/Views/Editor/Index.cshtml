@model CodeCur.Models.ViewModels.EditorViewModel
@{
    ViewBag.Title = "Editor";
}


<div data-editor data-type="@Html.Raw(Json.Encode(Model.File.Type))" class="editor-container">
    <p id="userIsEditing"></p>
    <menu>
        <h1>@Model.File.Name</h1>
        <ul id="joinedEditor" data-name="@User.Identity.Name"></ul>
        <p class="autosave-on">Autosave: <span>on</span></p>
        @Html.ActionLink("<", "Project", "Home", new { id = Model.File.ProjectID }, new { @class = "back-file-button" })
    </menu>
    <!-- We have to encode html so users can not inject code into our server. -->
    <% <div id="editor">@Html.Raw(Model.File.Data)</div> %>
    <div class="save-success-box"><span id="saveSuccess">Successfully saved!</span></div>
    <div class="save-error-box"><span id="saveError">An error came up, Content not saved!</span></div>
</div>


<script>
    // Settings for the editor, checking which kind of file is being edited.
    var editor = ace.edit("editor");
    editor.focus();
    var type = @Html.Raw(Json.Encode(Model.File.Type));
    editor.setTheme("ace/theme/monokai");
    if (type == "JavaScript") {
        editor.getSession().setMode("ace/mode/javascript");
    } else if (type == "HTML") {
        editor.getSession().setMode("ace/mode/html");
    } else if (type == "CSS") {
        editor.getSession().setMode("ace/mode/css");
    } else {
        editor.getSession().setMode("ace/mode/text");
    }

    // Saving with ctrl+s and Cmd+s.
    $(document).keydown(function (event) {
        if ((event.ctrlKey || event.metaKey) && event.which == 83) {
            saveFile();
            event.preventDefault();
        };
    });

    // Taking data from editor and storing it in the database.
    function saveFile() {
        var editor = ace.edit("editor");
        var code = editor.getValue();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Save", "Editor", new { id = Model.File.ID })",
            data: {
                Data: code,
            //},
            //success: function(result) {
            //    $(".save-success-box").css({ 'opacity': '1' });
            //    setTimeout(function () { $(".save-success-box").css({ 'opacity': '0'}); }, 2500);
            //},
            //error: function (result) {
            //    $(".save-error-box").css({ 'opacity': '1' });
            //    setTimeout(function () { $(".save-error-box").css({ 'opacity': '0' }); }, 2500);
            }
        });
    }

    var editorHub = $.connection.editorHub;
    var fileID = @Model.File.ID;
    var silent = false;

    // Live editing. For users to see each others every move.
    editorHub.client.onChange = function (changeData) {
        //console.log(changeData);
        silent = true;
        editor.getSession().getDocument().applyDelta(changeData);
        silent = false;
    };

    // Letting other users know who joined the file.
    editorHub.client.onJoin = function (username) {
        silent = true;
        $('#joinedEditor').append('<li>' + username + ' just joined! </li>');
        setTimeout(function () { $('#joinedEditor').html(''); }, 3000);
        silent = false;
    };

    // Letting other users know who left the file.
    editorHub.client.onLeave = function (username) {
        silent = true;
        $('#userIsEditing').html('');
        $('#joinedEditor').append('<li>' + username + ' just left! </li>');
        setTimeout(function () { $('#joinedEditor').html(''); }, 3000);
        silent = false;
    };

    $(document).on('click', '.back-file-button', function () {
        editorHub.server.leaveFile(fileID);
    });

    // Letting other users know where they are positioned in the file.
    editorHub.client.moveCursor = function (row, column, username) {
        silent = true;
        $('#userIsEditing').css({ 'padding': '5px 10px' });
        $('#userIsEditing').html(username + ' in row: ' + row);
        silent = false;
    };

    // Starting the SignalR connection
    $.connection.hub.start().done(function () {
        editorHub.server.joinFile(fileID);
        // Autosaving file every 2 seconds. May change when better servers can handle the website.
        setInterval(function () {saveFile()}, 2000);

        editor.on("change", function (obj) {
            if (silent) {
                return;
            }
            // log any event to console;
            //console.log(obj);
            editorHub.server.onChange(obj, fileID);
            editorHub.server.moveCursor(editor.getCursorPosition().row + 1, editor.getCursorPosition().column + 1, fileID);
        });
    });
</script>