@model CodeCur.Models.ViewModels.EditorViewModel
@{
    ViewBag.Title = "Editor";
}

<script src="~/Scripts/ace-builds-1.2.6/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
<script src="~/signalr/hubs"></script>


<div data-editor data-type="@Html.Raw(Json.Encode(Model.File.Type))" class="editor-container">
    <menu>
        <h1>@Model.File.Name</h1>
        <button id="saveButton">Save</button>
        @Html.ActionLink("<", "Project", "Home", new { id = Model.File.ProjectID }, new { @class = "back-file-button" })
    </menu>
    <div id="editor">@Model.File.Data</div>
    <div class="save-success-box"><span id="saveSuccess">Successfully saved!</span></div>
    <div class="save-error-box"><span id="saveError">An error came up, Content not saved!</span></div>
</div>


<script>
    var editor = ace.edit("editor");
    editor.focus();
    var type = @Html.Raw(Json.Encode(Model.File.Type));
    editor.setTheme("ace/theme/monokai");
    if (type == "JavaScript") {
        editor.getSession().setMode("ace/mode/javascript");
    } else if (type == "HTML") {
        editor.getSession().setMode("ace/mode/html");
    } else if (type == "CSS") {
        editor.getSession().setMode("ace/mode/css");
    } else {
        editor.getSession().setMode("ace/mode/text");
    }

    $('#saveButton').click( function () {
        saveFile();
    });

    $(document).keydown(function (event) {
        if ((event.ctrlKey || event.metaKey) && event.which == 83) {
            saveFile();
            event.preventDefault();
        };
    });

    function saveFile() {
        var editor = ace.edit("editor");
        var code = editor.getValue();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Save", "Editor", new { id = Model.File.ID })",
            data: {
                Data: code,
            },
            success: function(result) {
                $(".save-success-box").css({ 'bottom': '0', 'opacity': '1' });
                setTimeout(function () { $(".save-success-box").css({ 'bottom': '-42px', 'opacity': '0'}); }, 2500);
            },
            error: function (result) {
                $(".save-error-box").css({ 'bottom': '0', 'opacity': '1' });
                setTimeout(function () { $(".save-error-box").css({ 'bottom': '-42px', 'opacity': '0' }); }, 2500);
            }
       });
    }

    var editorHub = $.connection.editorHub;
    var fileID = @Model.File.ID;
    var silent = false;

    editorHub.client.onChange = function (changeData) {
        console.log(changeData);

        silent = true;
        editor.getSession().getDocument().applyDelta(changeData);
        silent = false;
    };

    $.connection.hub.start().done(function () {

        editorHub.server.joinFile(fileID);

        editor.on("change", function (obj) {
            if (silent) {
                return;
            }
            // log any event to console;
            console.log(obj);
            editorHub.server.onChange(obj, fileID);
        });
    });
</script>